#! /bin/bash
#
# Run extract-cmrr-physio Gear
# Built to flywheel-v0 spec.
#
CONTAINER="[flywheel/extract-cmrr-physio]"
echo -e "$CONTAINER  Initiated"

##############################################################################
# configuration

export LD_LIBRARY_PATH=/opt/mcr/v90/runtime/glnxa64:/opt/mcr/v90/bin/glnxa64:/opt/mcr/v90/sys/os/glnxa64:$LD_LIBRARY_PATH
export XAPPLRESDIR=/opt/mcr/v90/X11/app-defaults

# Configure paths
FLYWHEEL_BASE=/flywheel/v0
OUTPUT_DIR=$FLYWHEEL_BASE/output
INPUT_DIR=$FLYWHEEL_BASE/input
ZIP_DIR=$INPUT_DIR/DICOM_ARCHIVE # Must match input from the manifest
WORK_DIR=/tmp/work_dir
CONFIG_FILE=${FLYWHEEL_BASE}/config.json

# Ensure there is an output directory
if [[ ! -d "$OUTPUT_DIR" ]]; then
  echo "$CONTAINER  $OUTPUT_DIR not found!"
  exit 1
fi

mkdir ${WORK_DIR}


##############################################################################
# Handle INPUT

# The input to this Gear should be a zipped DICOM archive

input_file=$(find $INPUT_DIR/* -not -path '*/\.*' -type f | head -1)
dicom_input=''

if [[ -z "$input_file" ]] ; then
  echo -e "$CONTAINER  No input file was found!"
  exit 1
fi

# Prepare inputs: unzip, gunzip, or uncompressed
if [[ "$input_file" == *.zip ]] ; then

  echo "$CONTAINER  Unzipping $input_file"
  unzip -q "${input_file}" -d ${WORK_DIR}

  # Find unzipped directory in input dir
  dicom_input=$(find ${WORK_DIR}/* -not -path '*/\.*' -type f | head -1)

  # If there is no unzipped directory, check for PAR/REC files
  if [[ -z "${dicom_input}" ]]; then
    echo -e "$CONTAINER  No input file was found!"
    exit 1
  fi
else
  echo -e "$CONTAINER  No valid input file was found!"
  exit 1
fi


##############################################################################
# Run the algorithm passing forth the ENV vars with config

time /usr/local/bin/extractCMRRPhysio "${dicom_input}" "${OUTPUT_DIR}"

# # Check status code and die
if [[ $? != 0 ]]; then
  echo -e "$CONTAINER  Error during MCR execution!"
  exit 1
fi

# Get a list of the files in the output directory
outputs=$(find $OUTPUT_DIR/* -maxdepth 0 -type f -name "Physio*")

# If outputs exist go home happy
if [[ -z $outputs ]]
then
  echo "$CONTAINER  FAILED: No results found in output directory... Exiting"
  exit 1
else
  # Set permissions for outputs (prevent root only r/w)
  chmod -R 777 $OUTPUT_DIR

  # End
  echo -e "$CONTAINER  Wrote: `ls ${OUTPUT_DIR}`"
  echo -e "$CONTAINER  Done!"
fi

exit 0
