{
  "name": "extract-cmrr-physio",
  "label": "CMRR: Extract CMRR Physio",
  "description": "Extract physiological log files from encoded '_PHYSIO' DICOM file generated by CMRR MB sequences (>=R015, >=VD13A), Generate BIDs compliant files if desired",
  "maintainer": "Flywheel <support@flywheel.io>",
  "author": "E. Auerbach, CMRR, 2016",
  "url": "https://github.com/CMRR-C2P/MB",
  "source": "https://github.com/flywheel-apps/extract-cmrr-physio/releases/tag/1.0.0",
  "license": "MIT",
  "flywheel": "0",
  "version": "1.1.0",
  "custom": {
    "docker-image": "flywheel/extract-cmrr-physio:1.1.0",
    "gear-builder": {
      "category": "converter",
      "image": "flywheel/extract-cmrr-physio:1.1.0"
    }
  },
  "inputs": {
    "DICOM_ARCHIVE": {
      "description": "Zipped archive containing CMRR Physio data",
      "base": "file",
      "type": {
        "enum": [
          "dicom",
          "archive"
        ]
      }
    }
  },
  "config": {
    "Generate_Bids": {
      "description": "Generate BIDS compatible physio files",
      "type": "boolean",
      "default": false
    },
    "Generate_Raw": {
      "description": "Keep the raw '.log' files created by the matlab dicom to physio program",
      "type": "boolean",
      "default": true
    },
    "Generate_QA": {
      "description": "Generate QA plots of the physio measures for visual inspection",
      "type": "boolean",
      "default": true
    },


    "Process_Data": {
      "description": "Perform processing on the physio data, or push to BIDS raw",
      "type": "boolean",
      "default": false
    },

    "Missing_Data": {
      "description": "How to handle missing data in the physio recordings",
      "type": "string",
      "enum": [
              "preserve",
              "uniform",
              "upsample",
              "none"
               ],
      "default": "none"
    },

    "Interpolation_Method": {
      "description": "Method to use for signal interpolation",
      "type": "string",
      "enum": [
              "fill",
              "linear",
              "nearest",
              "zero",
              "slinear",
              "quadratic",
              "cubic",
              "nan"
               ],
      "default": "linear"
    },

    "Fill_Value": {
      "description": "The value to fill missing data with if Interpolation_Methos is 'Fill'",
      "type": "number",
      "default": 0
    },

    "gear-log-level": {
      "default": "INFO",
      "description": "Gear Log verbosity level (ERROR|WARNING|INFO|DEBUG)",
      "type": "string",
      "enum": [
        "ERROR",
        "WARNING",
        "INFO",
        "DEBUG"
      ]
    },
    "Dry-Run": {
      "type": "boolean",
      "default": false,
      "description": "Log all commands, but do not execute."
    }
  },
  "command": "python /flywheel/v0/run.py"
}
